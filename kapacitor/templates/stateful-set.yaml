{{- if not (empty .Values.influxURL) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
    app: {{ template "fullname" . }}
spec:
  replicas: 1
  serviceName: {{ template "fullname" . }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
      annotations:
        # Include a hash of the config in the pod template
        # This means that if the config changes, the deployment will be rolled
        checksum/config: {{ include (print .Template.BasePath "/config.yaml") . | sha256sum }}
    spec:
      containers:
      - name: {{ template "fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - containerPort: 9092
        volumeMounts:
        - name: {{ template "fullname" . }}
          mountPath: /var/lib/kapacitor
        - name: config
          mountPath: /etc/kapacitor
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      volumes:
      - name: {{ template "fullname" . }}
      - name: config
        configMap:
          name: {{ template "fullname" . }}
volumeClaimTemplates:
  - metadata:
      name: {{ template "fullname" . }}
    spec:
      accessModes:
       - {{ .Values.persistence.accessMode | quote }}
      storageClassName: {{ template "fullname" . }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
{{- end }}
